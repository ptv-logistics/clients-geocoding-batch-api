/* tslint:disable */
/* eslint-disable */
/**
 * Geocoding Batch
 * With the Batch Geocoding service you can find a large number of locations.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Warning
 */
export interface Warning {
    /**
     * A human readable message that describes the warning.
     * @type {string}
     * @memberof Warning
     */
    description: string;
    /**
     * A constant string that can be used to identify this warning class programmatically.
     * 
     * If additional information is available for a warningCode, it will be provided as key-value pairs with the parameter **details**. The keys available for a specific warningCode are documented directly with the warningCode. Unless stated otherwise, the values are of type string.
     * 
     * As an example, the following warningCode provides four key-value pairs in the **details**. 
     * The keys are called **parameter**, **value**, **relatedParameter** and **relatedValue**.
     * * `GENERAL_PARAMETER_IGNORED` - A parameter was ignored.
     *   * `parameter` - The ignored parameter.
     *   * `value` - The value of the ignored parameter.
     *   * `relatedParameter` - The parameter which caused the parameter in question to be ignored.
     *   * `relatedValue` - The value which caused the parameter in question to be ignored. Not present if the conflict is independent of the value.
     * 
     * Note that additional warningCode as well as the **details** of existing warningCode may be added at any time. Furthermore, the **description** may change at any time.  
     * 
     * * `GEOCODING_COUNTRY_FILTER_MODIFIED` - A given code in **countryFilter** referring to a subdivision of a country was modified to its corresponding country code.  
     *   * `requestedSubdivisionCode` - The subdivision code that was originally requested.  
     *   * `fallbackCountryCode` - The country code that was used as a fallback in the search.  
     * * `GEOCODING_TIMEOUT` - The search ran into a timeout while trying to find results.  
     * * `GEOCODING_INPUT_TOO_LONG` - The input was rejected because it is too long.  
     *   * `maximumSize` - The maximum allowed size of the single input field.  
     * * `TOO_MANY_INPUT_WORDS` - At least one of the input fields exceeded the maximum number of input words.  
     *   * `inputField` - The input field that had too many input words.
     *   * `actualNumberOfWords` - The number of words found in `inputField`.
     *   * `maximumAllowedNumberOfWords` - The maximum number of words allowed in `inputField`.
     * * `GEOCODING_TOO_MANY_RESULTS` - Too many results found. Not all of them are provided in the response.  
     * @type {string}
     * @memberof Warning
     */
    warningCode: string;
    /**
     * Additional properties specific to this class of warnings.
     * @type {{ [key: string]: any; }}
     * @memberof Warning
     */
    details?: { [key: string]: any; };
}

/**
 * Check if a given object implements the Warning interface.
 */
export function instanceOfWarning(value: object): value is Warning {
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('warningCode' in value) || value['warningCode'] === undefined) return false;
    return true;
}

export function WarningFromJSON(json: any): Warning {
    return WarningFromJSONTyped(json, false);
}

export function WarningFromJSONTyped(json: any, ignoreDiscriminator: boolean): Warning {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'],
        'warningCode': json['warningCode'],
        'details': json['details'] == null ? undefined : json['details'],
    };
}

export function WarningToJSON(value?: Warning | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'description': value['description'],
        'warningCode': value['warningCode'],
        'details': value['details'],
    };
}

